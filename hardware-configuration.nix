# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "uas" "usbhid" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.supportedFilesystems = [ "ntfs" ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/986cc9ef-8aab-466b-bfa9-0d6c8d1ab499";
      fsType = "ext4";
    };
  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/3C03-E301";
      fsType = "vfat";
    };

  # Alexandria
  fileSystems."/mnt/e" =
    { device = "/dev/disk/by-uuid/044ED70B4ED6F480";
      fsType = "lowntfs-3g";
      options = [ "rw" "ignore_case" "windows_names" "nls=utf8" "uid=1000" "gid=1000" "dmask=007" "fmask=117" ];
    };
    # "x-gvfs-show" # Whatever option that is
 #  # Riften
 #  fileSystems."/mnt/r" =
 #    { device = "/dev/disk/by-uuid/4A7C361B7C36026D";
 #      fsType = "ntfs3g";
 #      options = [ "x-gvfs-show" "uid=1000" "gid=1000" "dmask=007" "fmask=117"];
 #    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
